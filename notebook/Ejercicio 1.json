{
	"name": "Ejercicio 1",
	"properties": {
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "tcApachePool",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "56g",
			"driverCores": 8,
			"executorMemory": "56g",
			"executorCores": 8,
			"numExecutors": 2,
			"runAsWorkspaceSystemIdentity": false,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "8e6cf2b6-822d-4504-8699-28d188de18a2"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "scala"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/f98c40cb-c627-4c43-9ac4-d10bb7b42e04/resourceGroups/RG_MASTER_OCT22_GROUP10/providers/Microsoft.Synapse/workspaces/tcpractica2/bigDataPools/tcApachePool",
				"name": "tcApachePool",
				"type": "Spark",
				"endpoint": "https://tcpractica2.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/tcApachePool",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "3.2",
				"nodeCount": 3,
				"cores": 8,
				"memory": 56,
				"automaticScaleJobs": false
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"source": [
					"var horoscope = spark.sqlContext.read.option(\"header\", \"true\").csv(\"abfss://fstcpractica2@dlaccounttcpractica2.dfs.core.windows.net/horoscope.csv\")\r\n",
					"horoscope.show()"
				],
				"execution_count": 3
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"var countries = spark.sqlContext.read.option(\"header\", \"true\").csv(\"abfss://fstcpractica2@dlaccounttcpractica2.dfs.core.windows.net/countryContinent.csv\")\r\n",
					"countries.show()"
				],
				"execution_count": 4
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"var userIds = spark.sqlContext.read.option(\"delimiter\", \"\\t\").option(\"header\", \"true\").csv(\"abfss://fstcpractica2@dlaccounttcpractica2.dfs.core.windows.net/userid-timestamp-artid-artname-traid-traname.tsv\")\r\n",
					"userIds.show()"
				],
				"execution_count": 5
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"var userLogs = spark.sqlContext.read.option(\"delimiter\", \"\\t\").option(\"header\", \"true\").csv(\"abfss://fstcpractica2@dlaccounttcpractica2.dfs.core.windows.net/userid-timestamp-artid-artname-traid-traname.tsv\")\r\n",
					"userLogs.show()"
				],
				"execution_count": 6
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"var horoscope_dates = horoscope.map(line => line.getString(0)).map(line => line.split(\" - \"))\r\n",
					"horoscope_dates.take(10)\r\n",
					"var horoscope_signs = horoscope.map(line => line.getString(8)).collect()\r\n",
					"horoscope_signs.take(10)\r\n",
					"\r\n",
					""
				],
				"execution_count": 49
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					""
				],
				"execution_count": null
			}
		]
	}
}